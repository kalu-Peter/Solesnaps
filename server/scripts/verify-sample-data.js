#!/usr/bin/env node

/**
 * Verify Sample Data Script
 * Shows what data was added to Supabase tables
 */

const { supabaseAdmin } = require('../src/config/supabase');
require('dotenv').config();

async function verifyData() {
  console.log('üîç Verifying Sample Data in Supabase');
  console.log('===================================');
  
  try {
    // Check delivery locations
    console.log('\nüìç Delivery Locations:');
    const { data: locations, error: locError } = await supabaseAdmin
      .from('delivery_locations')
      .select('*')
      .order('city_name');

    if (locError) {
      console.error('‚ùå Error fetching locations:', locError.message);
    } else {
      console.log(`‚úÖ Found ${locations.length} delivery locations:`);
      locations.forEach(location => {
        console.log(`  üìç ${location.city_name} - KSh ${location.shopping_amount}`);
        console.log(`     üìç ${location.pickup_location}`);
        console.log(`     üìû ${location.pickup_phone}`);
        console.log(`     üîÑ Status: ${location.pickup_status}`);
        console.log('');
      });
    }

    // Check categories
    console.log('\nüëï Categories:');
    const { data: categories, error: catError } = await supabaseAdmin
      .from('categories')
      .select('*')
      .order('name');

    if (catError) {
      console.error('‚ùå Error fetching categories:', catError.message);
    } else {
      console.log(`‚úÖ Found ${categories.length} categories:`);
      categories.forEach(category => {
        console.log(`  üëï ${category.name} (${category.slug})`);
        console.log(`     üìù ${category.description}`);
        console.log(`     ‚úÖ Active: ${category.is_active}`);
        console.log('');
      });
    }

    // Check coupons
    console.log('\nüé´ Coupons:');
    const { data: coupons, error: couponError } = await supabaseAdmin
      .from('coupons')
      .select('*')
      .order('code');

    if (couponError) {
      console.error('‚ùå Error fetching coupons:', couponError.message);
    } else {
      console.log(`‚úÖ Found ${coupons.length} coupons:`);
      coupons.forEach(coupon => {
        const discountText = coupon.type === 'percentage' 
          ? `${coupon.value}%` 
          : `KSh ${coupon.value}`;
        const expiryDate = new Date(coupon.expires_at).toLocaleDateString();
        console.log(`  üé´ ${coupon.code} - ${discountText} off`);
        console.log(`     üìù ${coupon.description}`);
        console.log(`     üí∞ Min order: KSh ${coupon.min_order_amount}`);
        console.log(`     üìÖ Expires: ${expiryDate}`);
        console.log(`     üî¢ Usage: ${coupon.used_count}/${coupon.usage_limit || '‚àû'}`);
        console.log(`     ‚úÖ Active: ${coupon.is_active}`);
        console.log('');
      });
    }

    console.log('üéâ Data verification completed successfully!');
    console.log('\nüéØ Your Supabase database now has:');
    console.log(`üìç ${locations?.length || 0} delivery locations across Kenya`);
    console.log(`üëï ${categories?.length || 0} product categories`);
    console.log(`üé´ ${coupons?.length || 0} discount coupons`);

  } catch (error) {
    console.error('‚ùå Verification failed:', error.message);
  }
}

// Handle script execution
if (require.main === module) {
  verifyData()
    .then(() => {
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Verification failed:', error.message);
      process.exit(1);
    });
}

module.exports = { verifyData };